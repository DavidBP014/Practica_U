{"ast":null,"code":"var _jsxFileName = \"/Users/juandavidballesterosperez014/Practica_U-1/frontend/src/components/auth/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport callApi from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    name: '',\n    email: '',\n    familyType: ''\n  });\n  const history = useHistory();\n  const handleChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Intenta iniciar sesión\n      const data = await callApi('/auth/login', {\n        method: 'POST',\n        body: JSON.stringify(credentials)\n      });\n      // Si el inicio de sesión es exitoso, redirecciona a la página de ubicación\n      history.push('./locationPage.js');\n    } catch (error) {\n      // Si el usuario no está registrado, intenta registrar\n      try {\n        const registerData = await callApi('/auth/register', {\n          method: 'POST',\n          body: JSON.stringify(credentials)\n        });\n        // Si el registro es exitoso, redirecciona a la página de ubicación\n        history.push('./locationPage.js');\n      } catch (registerError) {\n        // Manejar errores de registro, como mostrar un mensaje al usuario\n        console.error('Registration failed:', registerError);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-text\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Luego de loguearte con nosotros podr\\xE1s revisar a partir de ubicaci\\xF3n el Jard\\xEDn m\\xE1s cercano para que te acerques y charlemos un rato.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: credentials.name,\n        onChange: handleChange,\n        placeholder: \"Introduce tu nombre\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"SkZUqXOCNI/1x3BXBV6MZwv/VcQ=\", false, function () {\n  return [useHistory];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useHistory","callApi","jsxDEV","_jsxDEV","LoginPage","_s","credentials","setCredentials","name","email","familyType","history","handleChange","e","target","value","handleSubmit","preventDefault","data","method","body","JSON","stringify","push","error","registerData","registerError","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/juandavidballesterosperez014/Practica_U-1/frontend/src/components/auth/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport callApi from '../utils/api';\n\nconst LoginPage = () => {\n    const [credentials, setCredentials] = useState({ name: '', email: '', familyType: '' });\n    const history = useHistory();\n\n    const handleChange = (e) => {\n        setCredentials({ ...credentials, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            // Intenta iniciar sesión\n            const data = await callApi('/auth/login', {\n                method: 'POST',\n                body: JSON.stringify(credentials),\n            });\n            // Si el inicio de sesión es exitoso, redirecciona a la página de ubicación\n            history.push('./locationPage.js');\n        } catch (error) {\n            // Si el usuario no está registrado, intenta registrar\n            try {\n                const registerData = await callApi('/auth/register', {\n                    method: 'POST',\n                    body: JSON.stringify(credentials),\n                });\n                // Si el registro es exitoso, redirecciona a la página de ubicación\n                history.push('./locationPage.js');\n            } catch (registerError) {\n                // Manejar errores de registro, como mostrar un mensaje al usuario\n                console.error('Registration failed:', registerError);\n            }\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"login-text\">\n                <p>Luego de loguearte con nosotros podrás revisar a partir de ubicación el Jardín más cercano para que te acerques y charlemos un rato.</p>\n            </div>\n            <form onSubmit={handleSubmit} className=\"login-form\">\n                {/* Campos del formulario */}\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={credentials.name}\n                    onChange={handleChange}\n                    placeholder=\"Introduce tu nombre\"\n                    required\n                />\n                {/* ...otros campos... */}\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}