{"ast":null,"code":"var _jsxFileName = \"/Users/juandavidballesterosperez014/Practica_U-1/frontend/src/components/location/locationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  width: '100%',\n  height: '400px'\n};\nconst LocationPage = props => {\n  _s();\n  const [userLocation, setUserLocation] = useState({\n    lat: 40.423765,\n    lng: -3.664428\n  }); // Coordenadas iniciales por defecto\n  const [jardines, setJardines] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setUserLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    }, error => {\n      console.error(error);\n    });\n\n    // Aquí puedes llamar a tu API para obtener los jardines o cualquier otro punto de interés que quieras mostrar en el mapa\n    // Por ejemplo, si tu API retorna una lista de jardines con sus respectivas latitudes y longitudes\n    // setJardines([{lat: 11.423765, lng: -1.664428}, {lat: 40.423765, lng: -3.664428}]);\n\n    // Sustituye 'callApi' con tu llamada API real aquí\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: mapStyles,\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      google: props.google,\n      zoom: 10,\n      style: mapStyles,\n      initialCenter: userLocation,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: userLocation,\n        title: \"Tu Ubicaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), jardines.map((jardin, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: jardin.lat,\n          lng: jardin.lng\n        },\n        title: jardin.nombre // Asumiendo que 'nombre' es una propiedad en tus jardines\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationPage, \"+3Dgyibg1El5nXBv2zHdcdL22TY=\");\n_c = LocationPage;\nexport default GoogleApiWrapper({\n  apiKey: 'TU_API_KEY' // Asegúrate de reemplazar 'TU_API_KEY' con tu clave API real\n})(LocationPage);\nvar _c;\n$RefreshReg$(_c, \"LocationPage\");","map":{"version":3,"names":["React","useState","useEffect","Map","GoogleApiWrapper","Marker","jsxDEV","_jsxDEV","mapStyles","width","height","LocationPage","props","_s","userLocation","setUserLocation","lat","lng","jardines","setJardines","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","console","style","children","google","zoom","initialCenter","title","fileName","_jsxFileName","lineNumber","columnNumber","map","jardin","index","nombre","_c","apiKey","$RefreshReg$"],"sources":["/Users/juandavidballesterosperez014/Practica_U-1/frontend/src/components/location/locationPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n  width: '100%',\n  height: '400px',\n};\n\nconst LocationPage = (props) => {\n  const [userLocation, setUserLocation] = useState({ lat: 40.423765, lng: -3.664428 }); // Coordenadas iniciales por defecto\n  const [jardines, setJardines] = useState([]);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n\n    // Aquí puedes llamar a tu API para obtener los jardines o cualquier otro punto de interés que quieras mostrar en el mapa\n    // Por ejemplo, si tu API retorna una lista de jardines con sus respectivas latitudes y longitudes\n    // setJardines([{lat: 11.423765, lng: -1.664428}, {lat: 40.423765, lng: -3.664428}]);\n\n    // Sustituye 'callApi' con tu llamada API real aquí\n  }, []);\n\n  return (\n    <div style={mapStyles}>\n      <Map\n        google={props.google}\n        zoom={10}\n        style={mapStyles}\n        initialCenter={userLocation}\n      >\n        {/* Marcador para la ubicación actual del usuario */}\n        <Marker position={userLocation} title=\"Tu Ubicación\" />\n        {/* Marcadores para los jardines */}\n        {jardines.map((jardin, index) => (\n          <Marker\n            key={index}\n            position={{ lat: jardin.lat, lng: jardin.lng }}\n            title={jardin.nombre} // Asumiendo que 'nombre' es una propiedad en tus jardines\n          />\n        ))}\n      </Map>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper({\n  apiKey: 'TU_API_KEY' // Asegúrate de reemplazar 'TU_API_KEY' con tu clave API real\n})(LocationPage);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,gBAAgB,EAAEC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC;IAAEe,GAAG,EAAE,SAAS;IAAEC,GAAG,EAAE,CAAC;EAAS,CAAC,CAAC,CAAC,CAAC;EACtF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdkB,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;MACZR,eAAe,CAAC;QACdC,GAAG,EAAEO,QAAQ,CAACC,MAAM,CAACC,QAAQ;QAC7BR,GAAG,EAAEM,QAAQ,CAACC,MAAM,CAACE;MACvB,CAAC,CAAC;IACJ,CAAC,EACAC,KAAK,IAAK;MACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CACF,CAAC;;IAED;IACA;IACA;;IAEA;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA;IAAKsB,KAAK,EAAErB,SAAU;IAAAsB,QAAA,eACpBvB,OAAA,CAACJ,GAAG;MACF4B,MAAM,EAAEnB,KAAK,CAACmB,MAAO;MACrBC,IAAI,EAAE,EAAG;MACTH,KAAK,EAAErB,SAAU;MACjByB,aAAa,EAAEnB,YAAa;MAAAgB,QAAA,gBAG5BvB,OAAA,CAACF,MAAM;QAACkB,QAAQ,EAAET,YAAa;QAACoB,KAAK,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEtDpB,QAAQ,CAACqB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC1BlC,OAAA,CAACF,MAAM;QAELkB,QAAQ,EAAE;UAAEP,GAAG,EAAEwB,MAAM,CAACxB,GAAG;UAAEC,GAAG,EAAEuB,MAAM,CAACvB;QAAI,CAAE;QAC/CiB,KAAK,EAAEM,MAAM,CAACE,MAAO,CAAC;MAAA,GAFjBD,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CA7CIF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA+ClB,eAAeP,gBAAgB,CAAC;EAC9BwC,MAAM,EAAE,YAAY,CAAC;AACvB,CAAC,CAAC,CAACjC,YAAY,CAAC;AAAC,IAAAgC,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}