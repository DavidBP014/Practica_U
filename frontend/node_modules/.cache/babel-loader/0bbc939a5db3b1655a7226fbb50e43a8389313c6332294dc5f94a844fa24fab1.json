{"ast":null,"code":"var _jsxFileName = \"/Users/juandavidballesterosperez014/Practica_U-1/frontend/src/components/location/locationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  width: '100%',\n  height: '400px'\n};\nconst LocationPage = props => {\n  _s();\n  const [userLocation, setUserLocation] = useState({\n    lat: 4.7110,\n    lng: -74.0721\n  }); // Coordenadas de Bogotá\n  const [jardines, setJardines] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setUserLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    }, error => {\n      console.error(error);\n    });\n\n    // Aquí se puede realizar la llamada a tu API para obtener los jardines o cualquier otro punto de interés que quieras mostrar en el mapa\n    // Por ejemplo:\n    // setJardines([{lat: 4.7110, lng: -74.0721, nombre: 'Jardín Botánico de Bogotá'}]);\n\n    // Sustituye la siguiente línea con tu llamada API real\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Map, {\n    google: props.google,\n    zoom: 12,\n    style: mapStyles,\n    initialCenter: userLocation,\n    children: [/*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      title: \"Tu Ubicaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), jardines.map((jardin, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: jardin.lat,\n        lng: jardin.lng\n      },\n      title: jardin.nombre // Asumiendo que 'nombre' es una propiedad en tus datos de jardines\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationPage, \"jCEZnJpBam2Cnj+C8E62azJwanc=\");\n_c = LocationPage;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAL0LqR3PA49z8gmgYbWPSpJRdAWTtbuaI' // Asegúrate de reemplazar con tu clave API real\n})(LocationPage);\nvar _c;\n$RefreshReg$(_c, \"LocationPage\");","map":{"version":3,"names":["React","useState","useEffect","Map","GoogleApiWrapper","Marker","jsxDEV","_jsxDEV","mapStyles","width","height","LocationPage","props","_s","userLocation","setUserLocation","lat","lng","jardines","setJardines","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","console","google","zoom","style","initialCenter","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","jardin","index","nombre","_c","apiKey","$RefreshReg$"],"sources":["/Users/juandavidballesterosperez014/Practica_U-1/frontend/src/components/location/locationPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n  width: '100%',\n  height: '400px',\n};\n\nconst LocationPage = (props) => {\n  const [userLocation, setUserLocation] = useState({ lat: 4.7110, lng: -74.0721 }); // Coordenadas de Bogotá\n  const [jardines, setJardines] = useState([]);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n\n    // Aquí se puede realizar la llamada a tu API para obtener los jardines o cualquier otro punto de interés que quieras mostrar en el mapa\n    // Por ejemplo:\n    // setJardines([{lat: 4.7110, lng: -74.0721, nombre: 'Jardín Botánico de Bogotá'}]);\n    \n    // Sustituye la siguiente línea con tu llamada API real\n  }, []);\n\n  return (\n    <Map\n      google={props.google}\n      zoom={12}\n      style={mapStyles}\n      initialCenter={userLocation}\n    >\n      {/* Marcador para la ubicación actual del usuario */}\n      <Marker position={userLocation} title=\"Tu Ubicación\" />\n      {/* Marcadores para los jardines */}\n      {jardines.map((jardin, index) => (\n        <Marker\n          key={index}\n          position={{ lat: jardin.lat, lng: jardin.lng }}\n          title={jardin.nombre} // Asumiendo que 'nombre' es una propiedad en tus datos de jardines\n        />\n      ))}\n    </Map>\n  );\n};\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAL0LqR3PA49z8gmgYbWPSpJRdAWTtbuaI' // Asegúrate de reemplazar con tu clave API real\n})(LocationPage);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,gBAAgB,EAAEC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC;IAAEe,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE,CAAC;EAAQ,CAAC,CAAC,CAAC,CAAC;EAClF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdkB,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;MACZR,eAAe,CAAC;QACdC,GAAG,EAAEO,QAAQ,CAACC,MAAM,CAACC,QAAQ;QAC7BR,GAAG,EAAEM,QAAQ,CAACC,MAAM,CAACE;MACvB,CAAC,CAAC;IACJ,CAAC,EACAC,KAAK,IAAK;MACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CACF,CAAC;;IAED;IACA;IACA;;IAEA;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA,CAACJ,GAAG;IACF0B,MAAM,EAAEjB,KAAK,CAACiB,MAAO;IACrBC,IAAI,EAAE,EAAG;IACTC,KAAK,EAAEvB,SAAU;IACjBwB,aAAa,EAAElB,YAAa;IAAAmB,QAAA,gBAG5B1B,OAAA,CAACF,MAAM;MAACkB,QAAQ,EAAET,YAAa;MAACoB,KAAK,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEtDpB,QAAQ,CAACqB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC1BlC,OAAA,CAACF,MAAM;MAELkB,QAAQ,EAAE;QAAEP,GAAG,EAAEwB,MAAM,CAACxB,GAAG;QAAEC,GAAG,EAAEuB,MAAM,CAACvB;MAAI,CAAE;MAC/CiB,KAAK,EAAEM,MAAM,CAACE,MAAO,CAAC;IAAA,GAFjBD,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGX,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA3CIF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA6ClB,eAAeP,gBAAgB,CAAC;EAC9BwC,MAAM,EAAE,yCAAyC,CAAC;AACpD,CAAC,CAAC,CAACjC,YAAY,CAAC;AAAC,IAAAgC,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}