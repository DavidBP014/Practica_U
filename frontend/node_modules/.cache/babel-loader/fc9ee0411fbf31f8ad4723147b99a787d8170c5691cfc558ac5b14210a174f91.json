{"ast":null,"code":"var _jsxFileName = \"/Users/juandavidballesterosperez014/Practica_U-1/frontend/src/components/location/locationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  width: '100%',\n  height: '400px'\n};\nconst LocationPage = props => {\n  _s();\n  const [userLocation, setUserLocation] = useState({\n    lat: 4.7110,\n    lng: -74.0721\n  }); // Coordenadas de Bogotá\n  // const [jardines, setJardines] = useState([]); // Comentado hasta que se necesite\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setUserLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    }, error => {\n      console.error(error);\n    });\n\n    // Aquí iría el código para obtener los jardines desde tu API cuando esté listo\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Map, {\n    google: props.google,\n    zoom: 12,\n    style: mapStyles,\n    initialCenter: userLocation,\n    children: /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      title: \"Tu Ubicaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationPage, \"aTCgicWStcy/tMYyRMrGIi+YnZE=\");\n_c = LocationPage;\nexport default GoogleApiWrapper({\n  apiKey: 'TU_API_KEY_REAL' // Reemplaza con tu clave API real\n})(LocationPage);\nvar _c;\n$RefreshReg$(_c, \"LocationPage\");","map":{"version":3,"names":["React","useState","useEffect","Map","GoogleApiWrapper","Marker","jsxDEV","_jsxDEV","mapStyles","width","height","LocationPage","props","_s","userLocation","setUserLocation","lat","lng","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","console","google","zoom","style","initialCenter","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","apiKey","$RefreshReg$"],"sources":["/Users/juandavidballesterosperez014/Practica_U-1/frontend/src/components/location/locationPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n  width: '100%',\n  height: '400px',\n};\n\nconst LocationPage = (props) => {\n  const [userLocation, setUserLocation] = useState({ lat: 4.7110, lng: -74.0721 }); // Coordenadas de Bogotá\n  // const [jardines, setJardines] = useState([]); // Comentado hasta que se necesite\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n\n    // Aquí iría el código para obtener los jardines desde tu API cuando esté listo\n  }, []);\n\n  return (\n    <Map\n      google={props.google}\n      zoom={12}\n      style={mapStyles}\n      initialCenter={userLocation}\n    >\n      {/* Marcador para la ubicación actual del usuario */}\n      <Marker position={userLocation} title=\"Tu Ubicación\" />\n      {/* Aquí irían los marcadores para los jardines cuando tengas esa información */}\n    </Map>\n  );\n};\n\nexport default GoogleApiWrapper({\n  apiKey: 'TU_API_KEY_REAL' // Reemplaza con tu clave API real\n})(LocationPage);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,gBAAgB,EAAEC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC;IAAEe,GAAG,EAAE,MAAM;IAAEC,GAAG,EAAE,CAAC;EAAQ,CAAC,CAAC,CAAC,CAAC;EAClF;;EAEAf,SAAS,CAAC,MAAM;IACdgB,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;MACZN,eAAe,CAAC;QACdC,GAAG,EAAEK,QAAQ,CAACC,MAAM,CAACC,QAAQ;QAC7BN,GAAG,EAAEI,QAAQ,CAACC,MAAM,CAACE;MACvB,CAAC,CAAC;IACJ,CAAC,EACAC,KAAK,IAAK;MACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CACF,CAAC;;IAED;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA,CAACJ,GAAG;IACFwB,MAAM,EAAEf,KAAK,CAACe,MAAO;IACrBC,IAAI,EAAE,EAAG;IACTC,KAAK,EAAErB,SAAU;IACjBsB,aAAa,EAAEhB,YAAa;IAAAiB,QAAA,eAG5BxB,OAAA,CAACF,MAAM;MAACgB,QAAQ,EAAEP,YAAa;MAACkB,KAAK,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpD,CAAC;AAEV,CAAC;AAACvB,EAAA,CAhCIF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAkClB,eAAeP,gBAAgB,CAAC;EAC9BkC,MAAM,EAAE,iBAAiB,CAAC;AAC5B,CAAC,CAAC,CAAC3B,YAAY,CAAC;AAAC,IAAA0B,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}